pipeline{
    parameters {
        text(
            defaultValue: 'epost', 
            description: 'The name of the user to launch the ec2 instance.', 
            name: 'User')
        text(
            defaultValue: 'epostdev', 
            description: 'The key pair associated with the EC2 instance.', 
            name: 'KeyPair')
    }
    agent {
        docker {
            image 'cloudformation-builder:latest'
            label 'docker-build-small'
            registryUrl 'https://707566951618.dkr.ecr.us-west-2.amazonaws.com'
            registryCredentialsId 'ecr:us-west-2:jenkins-deploy'
            args "-u root --env KEYPAIR=${params.KeyPair} --env USER=${params.User}"
        }
    }
    environment {
        USER = "${params.User}"
        KEYPAIR = "${params.KeyPair}"
    }
    options {
        gitLabConnection('code.usgs.gov')
    }
    triggers {
        gitlab( triggerOnPush: true, 
                triggerOnMergeRequest: true, 
                branchFilterType: 'NameBasedFilter',
                skipWorkInProgressMergeRequest: true,
                ciSkip: true,
                setBuildDescription: true)
    }
    stages {
        stage("Run Ansible provisioning script"){
            steps { 
                dir('ec2_tools/ansible') {
                    ansiColor('xterm') {
                        ansiblePlaybook(
                            inventory: 'hosts',
                            credentialsId: 'jenkins-master-key',
                            hostKeyChecking: false,
                            playbook: 'playbook_ec2.yml')
                    }
                }
                sh('update-hosts-file.sh')
            }
        }
        stage("Run Ansible configuration script"){
            steps {
                dir('ec2_tools/ansible') {
                    sh 'printenv'
                    ansiColor('xterm') {
                        ansiblePlaybook(
                            inventory: 'hosts',
                            credentialsId: 'jenkins-master-key',
                            hostKeyChecking: false,
                            playbook: 'playbook_configure_ec2.yml')
                    }                
                }
            }
        }
    }
}
