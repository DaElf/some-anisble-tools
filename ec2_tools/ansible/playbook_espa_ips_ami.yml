- name: Create a ESPA/IPS AMI from Base 
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    keypair: djt-us-west-2 # pem file name
    ansible_ssh_private_key_file: ~/.ssh/djt-us-west-2.pem
    vol_size: 32
    jobtmp_size: 256
    jobtmp_iops: 2500
    security_group: sg-0c305038ba5d8d1fb
    name_tag: TEST-ESPA-IPS-AMI-Builder
    proj_tag: l2pgsv2
    region: us-west-2
    instance_type: t2.xlarge
    ami: ami-a0cfeed8  # AWS Linux  1 - required for ECS/Batch
    subnet: subnet-044c596c6b1ad7906
    
  roles:
    - ec2-espa-ips-ami
    
  tasks:
    - name: Create SSH Group to login dynamically to EC2 Instance
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: ec2_server
      with_items: "{{ ec2_provision_result.instances }}"

- name: Configure worker
  hosts: ec2_server
  remote_user: ec2-user
  vars:
    ansible_ssh_private_key_file: ~/.ssh/djt-us-west-2.pem
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  become: yes

  roles:
    - s3-fuse
    - efs-mount
    - jenkins-docker-worker

  tasks:
    - name:  Add the epel repo
      yum: name='https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm' state=present
    
    - name: Install ecs-init from amzn-updates repo
      yum: name=ecs-init state=present

    - name: Install nginx from amzn-main repo
      yum: name=nginx state=present

    - name: Update root filesystem in nginx config
      lineinfile: dest=/etc/nginx/nginx.conf regexp="^[\s]+root"  line="        root         /s3/auxiliaries/aster;"
    
    - name: Install docker
      yum: name=docker state=present

    - name: Install awscli
      yum: name=awscli state=present
##Configure nginx

- name: Start AMI build process
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    region: us-west-2
    proj_tag: l2pgsv2
    
  tasks:
    - debug: var=ec2_provision_result.instances[0]
      
    - name : Create AMI
      ec2_ami:
        instance_id: "{{ ec2_provision_result.instances[0].id }}"
        wait: yes
        delete_snapshot: yes
        name: TEST-ESPA-IPS-AMI
        tags:
          Name:  TEST-ESPA-IPS-AMI
          Project: "{{ proj_tag }}"

    - name: Terminate instances that were previously launched
      ec2:
        state: 'absent'
        region: "{{ region }}"
        instance_ids: "{{ ec2_provision_result.instances[0].id }}"
