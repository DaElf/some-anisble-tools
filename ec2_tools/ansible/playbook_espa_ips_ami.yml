- name: Create a ESPA/IPS AMI from Base 
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    keypair: sshrestha_key # pem file name
    ansible_ssh_private_key_file: ~/.ssh/ec2-user.pem
    vol_size: 32
    jobtmp_size: 256
    jobtmp_iops: 2500
    security_group: sg-0c305038ba5d8d1fb
    name_tag: ESPA-IPS-AMI-Builder-LINUX-2
    proj_tag: l2pgsv2
    region: us-west-2
    instance_type: t2.xlarge
    ami: ami-061e7ebbc234015fe  # AWS Linux 2 - required for ECS/Batch
    subnet: subnet-044c596c6b1ad7906
    
  roles:
    - ec2-espa-ips-ami
    
- name: Configure worker
  hosts: ec2_server
  remote_user: ec2-user
  vars:
    ansible_ssh_private_key_file: ~/.ssh/ec2-user.pem
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no' #Have to include this or it fails unattended
  become: yes

  roles:
    - efs-mount
    - s3-fuse

  tasks:
    - name: Install xfs utilities from amzn-main
      yum: name=xfsprogs state=present

    - name: Create partition 1 on /dev/xvdb
      parted:
        device: /dev/xvdb
        number: 1
        state: present

    - name: Create a xfs filesystem on /dev/xvdb1
      filesystem:
        fstype: xfs
        dev: /dev/xvdb1
        opts: "-L jobtmp"

    - name: Mount /jobtmp from /dev/xvdb1
      mount:
        path: "/jobtmp"
        src: LABEL=jobtmp
        fstype: xfs
        state: mounted

    - name: Set permissions to open on /jobtmp
      file:
        path: "/jobtmp"
        mode: 0777

    - name: Enable  amazon-linux-ecs
      shell: "amazon-linux-extras enable ecs"
      become: yes

    - name: Install ecs-init from amzn-updates repo
      yum: name=ecs-init state=present   
     
    - name: Enable service ecs and ensure it is started
      service:
        name: ecs
        enabled: yes
        state: started

    - name: Install nginx1.12 from amazon-linux-extras
      shell: "amazon-linux-extras install nginx1.12"
      become: yes

    - name: Update root filesystem in nginx config
      lineinfile: dest=/etc/nginx/nginx.conf regexp="^[\s]+root"  line="        root         /s3/auxiliaries/aster;"

    - name: Install docker from amzn-updates repo
      yum: name=docker state=present

    - name: enable service docker and ensure it is started
      service:
        name: docker
        enabled: yes
        state: started

    - name: enable service nginx and ensure it is started
      service:
        name: nginx
        enabled: yes
        state: started

    - name: adding existing user ec2-user to group docker
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Install aws-cli from amzn-updates repo
      yum: name=aws-cli state=present

- name: Start AMI build process
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    region: us-west-2
    proj_tag: l2pgsv2
    
  tasks:
    - debug: var=ec2_provision_result.instances[0]
      
    - name : Create AMI
      ec2_ami:
        instance_id: "{{ ec2_provision_result.instances[0].id }}"
        wait: yes
        delete_snapshot: yes
        name: ESPA-IPS-AMI-LINUX-2
        region: us-west-2
        tags:
          Name:  ESPA-IPS-AMI-LINUX-2
          Project: "{{ proj_tag }}"
      register: ami_creation_result
     
    - debug: var=ami_creation_result

    - name: Terminate instances that were previously launched
      ec2:
        state: 'absent'
        region: "{{ region }}"
        instance_ids: "{{ ec2_provision_result.instances[0].id }}"
