---
# tasks file for jenkin-docker-worker
- name:  Add the epel repo
  yum:
    lock_timeout: 180
    name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm'
    state: present

- name:  Add the IUS repo
  yum:
    lock_timeout: 180
    name: 'https://centos7.iuscommunity.org/ius-release.rpm'
    state: present

- name: Enable the Amazon Linux Extras Docker Repo
  command: "amazon-linux-extras enable docker"

- name: Install Amazon ECR Credential Helper
  yum:
    lock_timeout: 180
    name: "amazon-ecr-credential-helper"
    state: present
 
- name: Install nfs-utils
  yum:
    lock_timeout: 180
    name: nfs-utils
    state: present

- name: Install java-1.8.0-openjdk
  yum:
    lock_timeout: 180
    name: java-1.8.0-openjdk
    state: present

- name: Creates directory /devel
  file:
    path: /devel
    state: directory

- name: Mount up /devel
  mount:
    path: /devel
    src: fs-ba87af13.efs.us-west-2.amazonaws.com:/
    fstype: nfs4
    opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noatime
    state: mounted

- name: Update all packages to latest
  yum:
    lock_timeout: 180
    name: '*'
    state: latest

- name: Install specific mock package for centos 7
  yum:
    lock_timeout: 180
    name:
      - mock
      - rpm-build
      - createrepo
      - createrepo_c
      - git2u
      - git-lfs
      - docker
      - awscli
    state: present

- name: enable service nfs and ensure it is not masked
  systemd:
    name: nfs
    enabled: yes
    state: started
    masked: no

- name: enable service docker and ensure it is not masked
  systemd:
    name: docker
    enabled: yes
    state: started
    masked: no

- name: adding existing user ec2-user to group docker
  user:
    name: ec2-user
    groups: docker
    append: yes

- name: Add the user 'jenkins' with a specific uid and a primary group of 'wheel'
  user:
    name: jenkins
    comment: Jenkins Slave
    uid: 6000
    groups: wheel,docker
    shell: /bin/zsh
    home: /jenkins
    create_home: true

- name: Create docker dir for ECR credential helper
  file:
    path: "/home/ec2-user/.docker"
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: 0700

- name: Deploy config.json for ECR credential helper
  copy:
    src: "docker-ecr-cred-helper-config.json"
    dest: "/home/ec2-user/.docker/config.json"
    owner: ec2-user
    group: ec2-user
    mode: 0600

