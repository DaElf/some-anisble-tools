---
# tasks file for jenkins-install
# Install Java and dependencies
- name: Ensure Java is installed
  package:
    name:
      - java-1.8.0-openjdk
    state: present

- name: Install dependencies
  package:
    name:
      - curl
      - libselinux-python
      - initscripts
    state: present

# Setup jenkins repo
- name: Download jenkins.repo
  get_url:
    url: "{{ jenkins_repo_url }}"
    dest: /etc/yum.repos.d/jenkins.repo

- name: Import Jenkins Key
  rpm_key:
    state: present
    key: "{{ jenkins_repo_key }}"

# Install Jenkins
- name: Install Jenkins
  yum:
    name: jenkins
    state: present

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

# Configure Jenkins init settings
- include_tasks: settings.yml

# Start and Enable Jenkins
- name: Start and Enable Jenkins
  service:
    name: jenkins
    state: started
    enabled: true

# Make sure Jenkins starts before configuring
  command: >
    curl -D - --silent --max-time 5 http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/
  args:
    warn: false
  register: result
  until: >
    (result.stdout.find("403 Forbidden") != -1)
    or (result.stdout.find("200 OK") != -1)
    and (result.stdout.find("Please wait while") == -1)
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false
  check_mode: false

#- name: Wait for Jenkins to start up before proceeding
  get_url:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_jar_location }}"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or '304' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10
  check_mode: false

- name: Remove Jenkins security init scripts after first startup.
  
    path: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    state: absent

# Update Jenkins and install configured plugins.
- include_tasks: plugins.yml
